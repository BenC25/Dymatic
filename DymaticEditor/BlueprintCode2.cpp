//Dymatic C++ Include Script#include "DymaticNodeLibrary.h"public:FunctionReturn s_NodeEditorFunctionSave_InputAction_Fire_1;FunctionReturn s_NodeEditorFunctionSave_Branch_5;FunctionReturn s_NodeEditorFunctionSave_Do_N_10;FunctionReturn s_NodeEditorFunctionSave_OutputAction_16;FunctionReturn s_NodeEditorFunctionSave_Set_Timer_20;FunctionReturn s_NodeEditorFunctionSave_Sequence_27;FunctionReturn s_NodeEditorFunctionSave_Move_To_30;FunctionReturn s_NodeEditorFunctionSave_Random_Wait_32;FunctionReturn s_NodeEditorFunctionSave_Test_Comment_34;FunctionReturn s_NodeEditorFunctionSave_Test_Comment_35;FunctionReturn s_NodeEditorFunctionSave_<_36;FunctionReturn s_NodeEditorFunctionSave_o.O_40;FunctionReturn s_NodeEditorFunctionSave__44;FunctionReturn s_NodeEditorFunctionSave_Print_String_46;FunctionReturn s_NodeEditorFunctionSave_Transform_50;FunctionReturn s_NodeEditorFunctionSave_Group_53;FunctionReturn s_NodeEditorFunctionSave_On_Create_60;FunctionReturn s_NodeEditorFunctionSave_Random_Float_62;FunctionReturn s_NodeEditorFunctionSave_Print_String_67;FunctionReturn s_NodeEditorFunctionSave_Float_To_String_76;FunctionReturn s_NodeEditorFunctionSave_Print_String_81;virtual void OnCreate() override{switch ((s_NodeEditorFunctionSave_On_Create_60 = On_Create(NodeInputReturnCalculationVariable_On_Create_60)).Executable){case 0: {s_NodeEditorFunctionSave_Random_Float_62.PinValues.push_back({});switch ((s_NodeEditorFunctionSave_Random_Float_62 = Random_Float(NodeInputReturnCalculationVariable_Random_Float_62)).Executable){case 0: {s_NodeEditorFunctionSave_Print_String_67.PinValues.push_back({});s_NodeEditorFunctionSave_Print_String_67.PinValues.push_back({});s_NodeEditorFunctionSave_Float_To_String_76.PinValues.push_back({});s_NodeEditorFunctionSave_Random_Float_62.PinValues.push_back({});s_NodeEditorFunctionSave_Float_To_String_76.PinValues[0].Float = s_NodeEditorFunctionSave_Random_Float_62.PinValues[1].Float;s_NodeEditorFunctionSave_Print_String_67.PinValues[1].String = Float_To_String(s_NodeEditorFunctionSave_Float_To_String_76).PinValues[0].String;switch ((s_NodeEditorFunctionSave_Print_String_67 = Print_String(NodeInputReturnCalculationVariable_Print_String_67)).Executable){case 0: {s_NodeEditorFunctionSave_Print_String_81.PinValues.push_back({});s_NodeEditorFunctionSave_Print_String_81.PinValues.push_back({});s_NodeEditorFunctionSave_Float_To_String_76.PinValues.push_back({});s_NodeEditorFunctionSave_Random_Float_62.PinValues.push_back({});s_NodeEditorFunctionSave_Float_To_String_76.PinValues[0].Float = s_NodeEditorFunctionSave_Random_Float_62.PinValues[1].Float;s_NodeEditorFunctionSave_Print_String_81.PinValues[1].String = Float_To_String(s_NodeEditorFunctionSave_Float_To_String_76).PinValues[0].String;switch ((s_NodeEditorFunctionSave_Print_String_81 = Print_String(NodeInputReturnCalculationVariable_Print_String_81)).Executable){};break;}};break;}};break;}};}